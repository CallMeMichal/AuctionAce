@using AuctionAce.Api.Models.ViewModels.ItemViewModel
@model ItemViewModel
@{
    Layout = "~/Views/Shared/_LayoutLogged.cshtml";
    string userEmail = Context.Session.GetString("UserEmail");
    string userId = Context.Session.GetString("UserId");
}


<div class="row">
    <div class="col-md-5">
        <div class="photo-box" style="margin-top:0px;">
            <div id="carouselExampleControls" class="carousel slide">
                <div class="carousel-inner">

                    @foreach (var item in Model.ItemDomain)
                    {
                        @for (int i = 0; i < item.ItemImageBase64.Count; i++)
                        {
                            var image = item.ItemImageBase64[i];
                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                <img class="d-block w-100" src="data:image/png;base64,@image" alt="Image @i">
                            </div>
                        }
                    }
                </div>
                <a class="carousel-control-prev" href="#carouselExampleControls" role="button" data-bs-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Previous</span>
                </a>
                <a class="carousel-control-next" href="#carouselExampleControls" role="button" data-bs-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="visually-hidden">Next</span>
                </a>
            </div>
        </div>
    </div>


    <div class="col-md-2" style="text-align:center">
        <button id="quitButton" class="btn btn-primary ms-2">Quit</button>
    </div>
    <div class="col-md-5">
        <div class="leaderboard" id="leaderBody" style="margin-top:0px;max-height: 400px; overflow-y: auto;">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Nick</th>
                        <th scope="col">Price</th>
                    </tr>
                </thead>
                <tbody id="leaderboardBody">

                </tbody>
            </table>
        </div>
    </div>

</div>
<div class="row">
    <div class="col-md-5">
        <input type="number" id="acutalPrice" disabled value="2100" />
    </div>
    <div class="col-md-2">
        <button id="bidButton" class="btn btn-primary ms-2">Bid</button>
    </div>
    <div class="col-md-5">
        <input type="number" id="newBid" />
    </div>
</div>
  @*   $(document).ready(function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/bidhub")
            .build();

        connection.start()
            .then(() => {
                connection.invoke("JoinGroup", itemGuid)
                    .catch(err => console.error("Error joining group: ", err.toString()));
            })
            .catch(err => console.error("Error establishing connection: ", err.toString()));

        connection.on("ReceiveBid", function (bid, userEmail, date) {
            updateLeaderboard(bid, userEmail);
        });

        $('#bidButton').click(function () {
            const offer = $('#newBid')[0].valueAsNumber;
            if (offer) {
                connection.invoke("SendBidToGroup", itemGuid, offer, userEmail)
                    .catch(err => console.error("Error sending bid: ", err.toString()));
            }
        });

        function updateLeaderboard(bid, userEmail) {
            const tableBody = document.getElementById('leaderboardBody');

            // Sprawdź, czy oferta jest większa niż najwyższa oferta
            if (bid > highestBid) {
                // Jeśli tabela jest pełna (10 wierszy), usuń ostatni wiersz
                if (tableBody.rows.length >= 10) {
                    tableBody.deleteRow(tableBody.rows.length - 1);
                }

                // Wstaw nowy wiersz na początku tabeli
                const newRow = tableBody.insertRow(0);
                newRow.insertCell(0).textContent = 1;
                newRow.insertCell(1).textContent = userEmail;
                newRow.insertCell(2).textContent = bid;

                // Zaktualizuj najwyższą ofertę
                highestBid = bid;

                // Zaktualizuj numery pozycji
                for (let i = 0; i < tableBody.rows.length; i++) {
                    tableBody.rows[i].cells[0].textContent = i + 1;
                }
            }
        }

    }); *@





<div class="container-fluid chat-container">
    <div class="chat-box" id="chatBox">
    </div>
    <div class="chat-input p-3">
        <input id="messageInput" type="text" class="form-control" placeholder="Type message..." />
        <button id="sendButton" class="btn btn-primary ms-2">Send</button>
    </div>
</div>


<script>
    ///dodać tutaj start bid
    let highestBid = 0;
    const itemGuid = '@Model.Guid';
    const userEmail = '@userEmail';
    const userId = '@userId';
    var auctionItemId = '@Model.Id';

    $(document).ready(function () {
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/chathub")
            .build();

        console.log(itemGuid);

        connection.start()
            .then(() => {
                connection.invoke("JoinGroup", itemGuid)
                    .catch(err => console.error("Error joining group: ", err.toString()));
            })
            .catch(err => console.error("Error establishing connection: ", err.toString()));

        connection.on("ReceiveMessage", function (message, userEmail, date) {
            var messageElement = document.createElement("div");
            messageElement.className = "message";
            messageElement.textContent = `${date}: ${userEmail}: ${message}`;
            document.getElementById("chatBox").appendChild(messageElement);
        });

        $('#sendButton').click(function () {
            const message = $('#messageInput').val();
            if (message) {

                connection.invoke("SendMessageToGroup", itemGuid, message, userEmail, auctionItemId, userId)
                    .catch(err => console.error("Error sending message: ", err.toString()));
                $('#messageInput').val(''); // Wyczyść pole tekstowe po wysłaniu wiadomości
            }
        });

        $('#quitButton').click(function () {

            connection.invoke("LeaveGroup", itemGuid)
                .catch(err => console.error("Error sending message: ", err.toString()));
        });



    });


</script>



<style>

    .carousel-inner img {
        width: 100%; /* Szerokość zdjęcia dopasowana do kontenera */
        height: auto; /* Automatyczna wysokość, aby zachować proporcje */
        max-height: 400px; /* Maksymalna wysokość dla dużych ekranów */
        object-fit: cover; /* Dopasowanie zdjęcia, przycięcie, aby zachować proporcje */
    }

    .table {
        margin-bottom: 0;
        margin-top: 0px;
    }

        .table tbody {
            display: block;
            max-height: 400px; /* Ustawienie maksymalnej wysokości dla przewijania */
            overflow-y: auto;
        }

            .table thead, .table tbody tr {
                display: table;
                width: 100%;
                table-layout: fixed; /* Stała szerokość kolumn */
            }

        .table thead {
        }

            .table thead th {
                background-color: #007bff;
                color: white;
            }

        .table tbody tr:nth-child(even) {
            background-color: #f2f2f2;
        }

    /* Elementy dla chat-box */
    .chat-container {
        display: flex;
        flex-direction: column;
        height: 30vh;
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
    }

    .chat-box {
        flex: 1;
        overflow-y: auto;
        padding: 15px;
        border: 1px solid #ddd;
        background-color: #f8f9fa;
    }

    .chat-input {
        display: flex;
        padding: 10px;
        background-color: #fff;
    }

        .chat-input input {
            flex: 1;
            margin-right: 10px;
        }

    .chat-box::-webkit-scrollbar {
        width: 8px;
    }

    .chat-box::-webkit-scrollbar-thumb {
        background-color: #888;
        border-radius: 10px;
    }

        .chat-box::-webkit-scrollbar-thumb:hover {
            background-color: #555;
        }

</style>