@using AuctionAce.Api.Models.ViewModels.UserBoughtItems
@model List<UserBoughtItemsModel>
@{
    Layout = "~/Views/Shared/_LayoutLogged.cshtml";
    int counter = 0; // Zainicjuj licznik
}

<div class="container-fluid">
    <div class="row">
        @foreach (var item in Model)
        {
            var photos = item.ItemPhotos.SelectMany(group => group.Photos).ToList();
            var firstPhoto = photos.FirstOrDefault()?.PhotoBase64;

            <div class="col-lg-3 col-md-4 col-sm-6 mb-4">
                <div class="card h-100">
                    @if (!string.IsNullOrEmpty(firstPhoto))
                    {
                        <a href="#" data-bs-toggle="modal" data-bs-target="#photoModal-@counter">
                            <img src="data:image/jpeg;base64,@firstPhoto" class="card-img-top" alt="@item.ItemName" style="cursor: pointer; height: 200px; object-fit: cover;"> <!-- Ustal wysokość zdjęcia -->
                        </a>
                    }
                    <div class="card-body d-flex flex-column">
                        <h5 class="card-title">@item.ItemName</h5>
                        <p class="card-text">Price: @item.YourPrize</p>
                        <p class="card-text">Condition: @item.NewUsed</p>
                        <p class="card-text description-cell">@item.Description</p>
                    </div>
                </div>
            </div>

            @if (photos.Any())
            {
                <div class="modal fade" id="photoModal-@counter" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                    <div class="modal-dialog modal-lg">
                        <div class="modal-content">
                            <div class="modal-header">
                                <h5 class="modal-title" id="exampleModalLabel">@item.ItemName</h5>
                                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                            </div>
                            <div class="modal-body">
                                <div id="carouselExampleIndicators-@counter" class="carousel slide" data-bs-ride="carousel">
                                    <div class="carousel-inner">
                                        @for (int i = 0; i < photos.Count; i++)
                                        {
                                            var photo = photos[i];
                                            <div class="carousel-item @(i == 0 ? "active" : "")">
                                                <img src="data:image/jpeg;base64,@photo.PhotoBase64" class="d-block w-100" alt="..." style="max-height: 600px; object-fit: contain;"> <!-- Ustal maksymalną wysokość i sposób dopasowania -->
                                            </div>
                                        }
                                    </div>
                                    <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleIndicators-@counter" data-bs-slide="prev">
                                        <span class="carousel-control-prev-icon" style="background-color: black;"></span>
                                        <span class="visually-hidden">Previous</span>
                                    </button>
                                    <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleIndicators-@counter" data-bs-slide="next">
                                        <span class="carousel-control-next-icon" style="background-color: black;"></span>
                                        <span class="visually-hidden">Next</span>
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
            counter++;
        }
    </div>
</div>

<style>
    .description-cell {
        max-height: 100px; /* Ustal maksymalną wysokość dla opisu */
        overflow: hidden; /* Ukryj nadmiar, gdy jest za długi */
        text-overflow: ellipsis; /* Dodaj wielokropek, gdy tekst jest za długi */
        white-space: normal; /* Pozwól na zawijanie tekstu */
    }

    .container {
        padding: 2rem 0rem;
    }

    .card {
        transition: transform 0.2s;
    }

        .card:hover {
            transform: scale(1.05);
        }

    .carousel-inner img {
        max-width: 100%;
        max-height: 400px;
        object-fit: cover;
    }

    .carousel-control-prev-icon,
    .carousel-control-next-icon {
        background-color: black;
        border-radius: 50%;
    }
</style>
